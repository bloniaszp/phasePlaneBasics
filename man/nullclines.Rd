% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nullclines.R
\name{nullclines}
\alias{nullclines}
\title{Create nullclines for the phase plane}
\usage{
nullclines(fun, xlims, ylims, resol = 250, add = FALSE, parms = NULL)
}
\arguments{
\item{fun}{A function of two variables \code{(x, y)} (plus optional \code{parms})
that returns a vector \code{c(dx/dt, dy/dt)}.}

\item{xlims}{A numeric vector \code{c(xmin, xmax)} specifying plot range for x.}

\item{ylims}{A numeric vector \code{c(ymin, ymax)} specifying plot range for y.}

\item{resol}{Resolution of the grid. Default is 250.}

\item{add}{Logical. If \code{FALSE}, a new plot is created; if \code{TRUE},
nullclines are added to an existing plot.}

\item{parms}{Optional list of parameters to pass to \code{fun}.}
}
\value{
Called for its side effect of drawing nullcline contours on a plot.
}
\description{
This function creates nullclines within a phase plane. It assumes that you
have a differential equation or system of DEs of the following form:
}
\details{
\code{morrislecar <- function(V, W, parms) {
  g_L = 2; g_Ca = 4; g_K = 8; phi = 0.04;
  cap = 20; V_1 = -1.2; V_2 = 18; V_3 = 2;
  V_4 = 30; V_L = -60; V_Ca = 120; V_K = -84;
  I = 0;
  c(
    (1 / cap) * (I - g_Ca * 0.5 * (1 + tanh((V - V_1) / V_2)) * (V - V_Ca)
                 - g_K * W * (V - V_K) - g_L * (V - V_L)),
    phi * (0.5 * (1 + tanh((V - V_3) / V_4)) - W) *
         cosh((V - V_3) / (2 * V_4))
  )
}}

It calculates points (x, y) where dx/dt = 0 and/or dy/dt = 0, and draws
contour lines for those solutions.
}
\examples{
# Example usage with the morrislecar function:
# nullclines(morrislecar, xlims = c(-100, 50), ylims = c(0, 1), resol = 250)
}
